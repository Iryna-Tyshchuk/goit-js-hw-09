{"mappings":"AACY,IAAIA,KAAK,KAAM,EAAG,EAAG,GAAI,IAErBC,SAASC,cAAc","sources":["src/js/02-timer.js"],"sourcesContent":["const timer = {\n  deadline: new Date(2023, 0, 9, 12, 58),\n  intervalId: null,\n  rootSelector: document.querySelector('.js-timer-items'),\n\n  start() {\n    this.intervalId = setInterval(() => {\n      const diff = this.deadline - Date.now();\n\n      if (diff <= 0) {\n        this.stop();\n\n        return;\n      }\n\n      const { days, hours, minutes, seconds } = this.getTimeComponents(diff);\n\n      this.rootSelector.querySelector('.js-timer__days').textContent =\n        this.pad(days);\n      this.rootSelector.querySelector('.js-timer__hours').textContent =\n        this.pad(hours);\n      this.rootSelector.querySelector('.js-timer__minutes').textContent =\n        this.pad(minutes);\n      this.rootSelector.querySelector('.js-timer__seconds').textContent =\n        this.pad(seconds);\n    }, 1000);\n  },\n\n  stop() {\n    clearInterval(this.intervalId);\n  },\n\n  getTimeComponents(diff) {\n    const days = Math.floor(diff / 1000 / 60 / 60 / 24);\n    const hours = Math.floor(diff / 1000 / 60 / 60) % 24;\n    const minutes = Math.floor(diff / 1000 / 60) % 60;\n    const seconds = Math.floor(diff / 1000) % 60;\n\n    return {\n      days,\n      hours,\n      minutes,\n      seconds,\n    };\n  },\n\n  pad(value) {\n    return String(value).padStart(2, 0);\n  },\n};\n\n// timer.start();\n\n// declensionNum(num, words) {\n//   return words[\n//     num % 100 > 4 && num % 100 < 20\n//       ? 2\n//       : [2, 0, 1, 1, 1, 2][num % 10 < 5 ? num % 10 : 5]\n//   ];\n// }\n"],"names":["Date","document","querySelector"],"version":3,"file":"02-timer.6cccf53f.js.map"}