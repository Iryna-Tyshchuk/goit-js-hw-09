{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASQ,GAAUT,SAAEA,EAAQC,MAAEA,IAC7BS,EAAAb,GAASc,OAAOC,QAAQ,uBAAqBZ,QAAiBC,M,CAGhE,SAASY,GAAQb,SAAEA,EAAQC,MAAEA,IAC3BS,EAAAb,GAASc,OAAOG,QAAQ,sBAAoBd,QAAeC,M,CA1C9Cc,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAkCC,GAChCA,EAAMC,iBACN,IAAIC,EAAQ,EACZ,MAAMC,EAAQH,EAAMI,OAAOC,SAErBtB,EAAQuB,OAAOH,EAAMpB,MAAMwB,OAC3BC,EAAOF,OAAOH,EAAMK,KAAKD,OACzBE,EAASH,OAAOH,EAAMM,OAAOF,OAE7BG,EAAc,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAClC,MAAMC,EAAU/B,EAAc,EAAI8B,EAAG5B,EAAQ4B,EAAIH,GACjDE,EAAYG,KAAKD,GACjBV,GAAS,C,CAEXQ,EAAYI,SAAQF,GAAWA,EAAQG,KAAKxB,GAAWyB,MAAMrB,KAE7DK,EAAMI,OAAOa,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', createPromiseonBtnSubmit);\n\nfunction createPromiseonBtnSubmit(event) {\n  event.preventDefault();\n  let count = 0;\n  const datas = event.target.elements;\n\n  const delay = Number(datas.delay.value);\n  const step = Number(datas.step.value);\n  const amount = Number(datas.amount.value);\n\n  const promisesArr = [];\n  for (let i = 0; i < amount; i += 1) {\n    const promise = createPromise(1 + i, delay + i * step);\n    promisesArr.push(promise);\n    count += 1;\n  }\n  promisesArr.forEach(promise => promise.then(onSucsess).catch(onError));\n\n  event.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSucsess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$onSucsess","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onError","failure","document","querySelector","addEventListener","event","preventDefault","count","datas","target","elements","Number","value","step","amount","promisesArr","i","promise","push","forEach","then","catch","reset"],"version":3,"file":"03-promises.8d0a4a34.js.map"}